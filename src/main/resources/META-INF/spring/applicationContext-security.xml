<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <beans:import resource="applicationContext.xml"></beans:import>
    <!--HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
        <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" />
        <logout logout-url="/resources/j_spring_security_logout" />
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/member/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/login/**" access="permitAll" />
        <!--Filter URL-->


        <intercept-url pattern="/fareses/insertData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/fareses/updateData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/fareses" access="denyAll" />
        <intercept-url pattern="/fareses/" access="denyAll" />

        <intercept-url pattern="/approles/insertData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/approles/updateData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/approles" access="denyAll" />
        <intercept-url pattern="/approles/" access="denyAll" />

        <intercept-url pattern="/approles/insertDataUser" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/approles/updateDataUser" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/appusers" access="denyAll" />
        <intercept-url pattern="/appusers/" access="denyAll" />

        <intercept-url pattern="/promotes/insertsData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/promotes/updatesData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/travels" access="denyAll" />
        <intercept-url pattern="/travels/" access="denyAll" />

        <intercept-url pattern="/promotes/insertsData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/promotes/updatesData" access="hasRole('ROLE_ADMIN')" method="GET"/>
        <intercept-url pattern="/promotes" access="denyAll" />
        <intercept-url pattern="/promotes/" access="denyAll" />

        <intercept-url pattern="/datefareses" access="denyAll" />
        <intercept-url pattern="/datefareses/" access="denyAll" />

        <intercept-url pattern="/locations" access="denyAll" />
        <intercept-url pattern="/locations/" access="denyAll" />

        <intercept-url pattern="/promotions" access="denyAll" />
        <intercept-url pattern="/promotions/" access="denyAll" />

        <intercept-url pattern="/transports" access="denyAll" />
        <intercept-url pattern="/transports/" access="denyAll" />

        <!---->
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" method="PUT" />
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" method="POST" />
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" method="DELETE" />

        <intercept-url pattern="/**" access="isAuthenticated()" />
    </http>

    <!--Configure Authentication Custom -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <!--<get UserName By Server- />-->
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT PASSWORD,USERNAME,NEED_LOGIN ,1 FROM APP_USER WHERE username=? and NEED_LOGIN != false"
                               authorities-by-username-query=
                                       "select auser.USERNAME,arole.NAME role from APP_USER auser,APP_ROLE arole
                                        where auser.USERROLE = arole.ID and auser.username =?  "/>
            <!--<password-encoder hash="sha-256" />-->
        </authentication-provider>
        <authentication-provider>
            <password-encoder hash="sha-256" />
                <user-service>
                    <user name="fares" password="e9fdc00e7a228ea3948d4d1f144bc9671d41e613a94e6aca0d9497d43d7472b7" authorities="ROLE_USER" />
                </user-service>
        </authentication-provider>
    </authentication-manager>


</beans:beans>