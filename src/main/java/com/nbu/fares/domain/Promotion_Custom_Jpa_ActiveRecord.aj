// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nbu.fares.domain;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import java.util.List;

privileged aspect Promotion_Custom_Jpa_ActiveRecord {

    public static List<Promotion> Promotion.findPromotionByCode(String promotionCode,String promotionName) {
        Session session = (Session) Promotion.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(Promotion.class);
        Criterion codeRestriction = (Restrictions.or(Restrictions.eq("promotionCode", promotionCode),Restrictions.eq("promotionName", promotionName)));
        criteria.add(codeRestriction);
        return criteria.list();
    }

    public static List<Promotion> Promotion.findPromotionsByCode(String promotionCode) {
        Session session = (Session) Promotion.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(Promotion.class);
        Criterion codeRestriction = (Restrictions.or(Restrictions.eq("promotionCode", promotionCode)));
        criteria.add(codeRestriction);
        return criteria.list();
    }

    //    Edit
    public static List<Promotion> Promotion.findPromotionCodeDuplicate(String promotionCode) {
        Session session = (Session) Promotion.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(Promotion.class);
        Criterion codeRestriction = Restrictions.eq("promotionCode", promotionCode);
        criteria.add(codeRestriction);
        return criteria.list();
    }

    public static List<Promotion> Promotion.findPromotionNameDuplicate(String promotionName) {
        Session session = (Session) Promotion.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(Promotion.class);
        Criterion codeRestriction = Restrictions.eq("promotionName", promotionName);
        criteria.add(codeRestriction);
        return criteria.list();
    }
    
}
