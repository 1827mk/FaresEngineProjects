// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nbu.fares.domain;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import java.util.Date;
import java.util.List;

privileged aspect DateFares_Custom_Jpa_ActiveRecord {

    public static List DateFares.findAllDateCustomJPA() {
        Session session = (Session) DateFares.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(DateFares.class);
        criteria.addOrder(Order.asc("dateFared"));
        return criteria.list();
    }

    public static List<DateFares> DateFares.findDateByCode(Date dateFared) {
        Session session = (Session) DateFares.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(DateFares.class);
        Criterion codeRestriction = (Restrictions.eq("dateFared", dateFared));
        criteria.add(codeRestriction);
        return criteria.list();
    }

    //    Edit
    public static List<DateFares> DateFares.findDateDuplicate(Date dateFared) {
        Session session = (Session) DateFares.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(DateFares.class);
        Criterion codeRestriction = Restrictions.eq("dateFared", dateFared);
        criteria.add(codeRestriction);
        return criteria.list();
    }

}
