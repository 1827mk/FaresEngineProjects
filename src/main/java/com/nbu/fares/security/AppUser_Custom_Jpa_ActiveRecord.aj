// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nbu.fares.security;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

privileged aspect AppUser_Custom_Jpa_ActiveRecord {

    public static List<AppUser> AppUser.findCheckDuplicateUserAndMail(String username, String userEmail) {
        Session session = (Session) AppUser.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(AppUser.class);
        Criterion codeRestriction = (Restrictions.and(
                Restrictions.eq("username", username),
                Restrictions.eq("userEmail", userEmail))
        );
        criteria.add(codeRestriction);
        return criteria.list();
    }

    public static List<AppUser> AppUser.findCheckDuplicateUser(String username) {
        Session session = (Session) AppUser.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(AppUser.class);
        Criterion codeRestriction = (Restrictions.and(
                Restrictions.eq("username", username))

        );
        criteria.add(codeRestriction);
        return criteria.list();
    }

    public static List<AppUser> AppUser.checkOldPass(String username, String password) {
        Session session = (Session) AppUser.entityManager().getDelegate();
        Criteria criteria = session.createCriteria(AppUser.class);
        Criterion codeRestriction = (Restrictions.and(
                Restrictions.eq("username", username),
                Restrictions.eq("password", password))
        );
        criteria.add(codeRestriction);
        return criteria.list();
    }

}
